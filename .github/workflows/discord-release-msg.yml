
name: Discord Notifications

# Triggers for the workflow
on:
  # Trigger on release publication
  release:
    types:
      - published
  # Trigger when an issue is labeled
  issues:
    types:
      - labeled

jobs:
  # Job for sending release notifications
  notify_release:
    # Only run this job for release events
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    name: Send Release Message
    steps:
      - name: Sending release message to Discord
        uses: nhevia/discord-styled-releases@main
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

  # Job for sending issue notifications
  notify_accepted_bug:
    # Only run this job for issue labeling events
    if: github.event_name == 'issues' && github.event.action == 'labeled'
    runs-on: ubuntu-latest
    name: Send Accepted Bug Issue Message
    steps:
      # Step 1: Check if 'Accepted' was the specific label added AND 'Bug' is also present now
      - name: Check if 'Accepted' label was added and 'Bug' is present
        id: check_accepted_labels # Keep ID the same for consistency
        # --- UPDATED CONDITION ---
        # Checks the specific label that triggered the event IS 'Accepted'
        # AND that the 'Bug' label is present in the final list of labels on the issue.
        if: github.event.label.name == 'Accepted' && contains(github.event.issue.labels.*.name, 'Bug')
        run: echo "'Accepted' label added and 'Bug' label is present." # Log message for clarity

      # Step 2: Send notification ONLY if the check above passed
      - name: Send accepted issue message to Discord
        # This condition remains the same - it depends on the success of the check step
        if: steps.check_accepted_labels.conclusion == 'success'
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: https://discord.com/api/webhooks/${{ secrets.DISCORD_TEST_WEBHOOK_ID }}/${{ secrets.DISCORD_TEST_WEBHOOK_TOKEN }}
          username: "GitHub Issues Bot"
          avatar-url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          embed-title: "üêû Bug Raised: #${{ github.event.issue.number }} ${{ github.event.issue.title }}"
          embed-description: "**${{ github.event.issue.body }}**\n\nLabels: ${{ join(github.event.issue.labels.*.name, ', ') }}\n\n[Click here to view the issue](${{ github.event.issue.html_url }})"
          embed-color: 15158332 # Decimal color code (e.g., red)
          embed-url: ${{ github.event.issue.html_url }}
          
  notify_issue_fixed:
    # Only run this job for issue closing events
    if: github.event_name == 'issues' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Send Issue Fixed Message
    steps:
      # Step 1: Check if the closed issue had the 'Bug' label
      # We check github.event.issue context which contains the state just BEFORE closing usually,
      # or reflects the state at the time of closing, including labels.
      - name: Check if closed issue has 'Bug' label
        id: check_bug_label_on_close
        if: contains(github.event.issue.labels.*.name, 'Bug') && contains(github.event.issue.labels.*.name, 'Accepted')
        run: echo "Closed issue has 'Bug' & 'Accepted' labels."

        # Step 2: Send notification ONLY if the check above passed
      - name: Send fixed issue message to Discord
        if: steps.check_bug_label_on_close.conclusion == 'success'
        # Using the latest allowed action version
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: https://discord.com/api/webhooks/${{ secrets.DISCORD_TEST_WEBHOOK_ID }}/${{ secrets.DISCORD_TEST_WEBHOOK_TOKEN }}
          username: "GitHub Issues Bot"
          avatar-url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          embed-title: "‚úÖ Bug Fixed:  #${{ github.event.issue.number }} ${{ github.event.issue.title }}"
          embed-description: "**${{ github.event.issue.body }}**\n\nClosed by: `${{ github.actor }}`\n\n[Click here to view the issue](${{ github.event.issue.html_url }})"
          embed-color: 3066993 # Decimal color code (e.g., green)
          embed-url: ${{ github.event.issue.html_url }}
